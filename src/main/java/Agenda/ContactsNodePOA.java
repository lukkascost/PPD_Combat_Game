package Agenda;


/**
* Agenda/ContactsNodePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Agenda.idl
* domingo, 29 de abril de 2018 17:53:08 Horário da Guiana Francesa
*/

public abstract class ContactsNodePOA extends org.omg.PortableServer.Servant
 implements Agenda.ContactsNodeOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_data", new java.lang.Integer (0));
    _methods.put ("_set_data", new java.lang.Integer (1));
    _methods.put ("addContact", new java.lang.Integer (2));
    _methods.put ("deleteContact", new java.lang.Integer (3));
    _methods.put ("updateContact", new java.lang.Integer (4));
    _methods.put ("searchContact", new java.lang.Integer (5));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Agenda/ContactsNode/_get_data
       {
         Agenda.Contact $result[] = null;
         $result = this.data ();
         out = $rh.createReply();
         Agenda.CustomerSeqHelper.write (out, $result);
         break;
       }

       case 1:  // Agenda/ContactsNode/_set_data
       {
         Agenda.Contact newData[] = Agenda.CustomerSeqHelper.read (in);
         this.data (newData);
         out = $rh.createReply();
         break;
       }

       case 2:  // Agenda/ContactsNode/addContact
       {
         try {
           Agenda.Contact contact = Agenda.ContactHelper.read (in);
           boolean $result = false;
           $result = this.addContact (contact);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (Agenda.ContactsNodePackage.user_exists $ex) {
           out = $rh.createExceptionReply ();
           Agenda.ContactsNodePackage.user_existsHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // Agenda/ContactsNode/deleteContact
       {
         try {
           Agenda.Contact contact = Agenda.ContactHelper.read (in);
           boolean $result = false;
           $result = this.deleteContact (contact);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (Agenda.ContactsNodePackage.unknown_user $ex) {
           out = $rh.createExceptionReply ();
           Agenda.ContactsNodePackage.unknown_userHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // Agenda/ContactsNode/updateContact
       {
         try {
           Agenda.Contact oldContact = Agenda.ContactHelper.read (in);
           Agenda.Contact newContact = Agenda.ContactHelper.read (in);
           boolean $result = false;
           $result = this.updateContact (oldContact, newContact);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (Agenda.ContactsNodePackage.unknown_user $ex) {
           out = $rh.createExceptionReply ();
           Agenda.ContactsNodePackage.unknown_userHelper.write (out, $ex);
         }
         break;
       }

       case 5:  // Agenda/ContactsNode/searchContact
       {
         try {
           String name = in.read_string ();
           String $result = null;
           $result = this.searchContact (name);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (Agenda.ContactsNodePackage.unknown_user $ex) {
           out = $rh.createExceptionReply ();
           Agenda.ContactsNodePackage.unknown_userHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Agenda/ContactsNode:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ContactsNode _this() 
  {
    return ContactsNodeHelper.narrow(
    super._this_object());
  }

  public ContactsNode _this(org.omg.CORBA.ORB orb) 
  {
    return ContactsNodeHelper.narrow(
    super._this_object(orb));
  }


} // class ContactsNodePOA
